[{"path":"http://friendly.github.io/ggbiplot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vincent Vu. Author. Michael Friendly. Author, maintainer. Aghasi Tavadyan. Contributor.","code":""},{"path":"http://friendly.github.io/ggbiplot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vu V, Friendly M (2023). ggbiplot: Grammar Graphics Implementation Biplots. https://github.com/friendly/ggbiplot, https://friendly.github.io/ggbiplot/.","code":"@Manual{,   title = {ggbiplot: A Grammar of Graphics Implementation of Biplots},   author = {Vincent Vu and Michael Friendly},   year = {2023},   note = {https://github.com/friendly/ggbiplot, https://friendly.github.io/ggbiplot/}, }"},{"path":"http://friendly.github.io/ggbiplot/index.html","id":"ggbiplot-","dir":"","previous_headings":"","what":"A Grammar of Graphics Implementation of Biplots","title":"A Grammar of Graphics Implementation of Biplots","text":"Version 0.6.2 ( master branch ) package provides ggplot2 implementation biplot, simultaneous plot scores observations vectors variables principal component-like analyses. package provides two main functions: ggscreeplot() ggbiplot(). ggbiplot aims drop-replacement standard R function stats::biplot() extended functionality labeling groups, drawing correlation circle, adding data ellipsoids. also supports PCA-like objects calculated FactoMineR::PCA(), ade4::dudi.pca() MASS::lda(). package originally developed Vince Q. Yu https://github.com/vqv/ggbiplot. development supported part NSF Postdoctoral Fellowship DMS-0903120 2009-2012. current version, now CRAN, locus development.","code":""},{"path":"http://friendly.github.io/ggbiplot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Grammar of Graphics Implementation of Biplots","text":"can install latest CRAN version, install GitHub shown .","code":""},{"path":"http://friendly.github.io/ggbiplot/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"A Grammar of Graphics Implementation of Biplots","text":"Load packages:","code":"library(ggplot2) library(ggbiplot) library(dplyr) library(corrplot)  # set ggplot2 theme theme_set(theme_minimal(base_size = 14))"},{"path":"http://friendly.github.io/ggbiplot/index.html","id":"crime-data","dir":"","previous_headings":"Examples","what":"Crime data","title":"A Grammar of Graphics Implementation of Biplots","text":"crime data gives rates various serious crimes 50 U. S. states, originally United States Statistical Abstracts (1970). Let’s take quick look correlations among , using corrplot::corrplot() showing correlation ellipse whose eccentricity shading represents value correlation.  correlations positive. Note also variables dataset ordered seriousness violence, ranging murder auto theft. Carry PCA: biplot, using default scaling (standardized components), labeling states state abbreviation:  directions principal components arbitrary; free reflect variable vectors component scores facilitate interpretation. Also, seem differences among regions U.S., can visualized using data ellipses component scores. groups argument allows observations colored group summarized groups.  interpretation data now clear. first dimension, accounting 58.8% variance, can seen represent overall crime rate, Nevada (NV) high end North Dakota (ND), South Dakota (SD) West Virginia (WV) low end. second dimension, accounting 17.7% variance represents contrast personal crime vs. property crime. dimension, Massachusetts (MA), Rhode Island (RI) opposed Mississippi (MS), Alabama (AL), Louisiana (LA) South Carolina (SC). regions represented differences centers data ellipses scores. Southern states highest murder, assault rape, Northeast states highest auto theft larceny. standardized view, angles variable vectors approximate correlations among variables, according cos (angle) ≈ r. Thus, murder auto, nearly 90o reflect near 0 correlation.","code":"data(crime) crime |>    dplyr::select(where(is.numeric)) |>    cor() |>    corrplot(method = \"ellipse\", tl.srt = 0) crime.pca <-    crime |>    dplyr::select(where(is.numeric)) |>   prcomp(scale. = TRUE)  crime.pca #> Standard deviations (1, .., p=7): #> [1] 2.029 1.113 0.852 0.563 0.508 0.471 0.352 #>  #> Rotation (n x k) = (7 x 7): #>             PC1     PC2     PC3     PC4     PC5     PC6     PC7 #> murder   -0.300 -0.6292  0.1782 -0.2321  0.5381  0.2591  0.2676 #> rape     -0.432 -0.1694 -0.2442  0.0622  0.1885 -0.7733 -0.2965 #> robbery  -0.397  0.0422  0.4959 -0.5580 -0.5200 -0.1144 -0.0039 #> assault  -0.397 -0.3435 -0.0695  0.6298 -0.5067  0.1724  0.1917 #> burglary -0.440  0.2033 -0.2099 -0.0576  0.1010  0.5360 -0.6481 #> larceny  -0.357  0.4023 -0.5392 -0.2349  0.0301  0.0394  0.6017 #> auto     -0.295  0.5024  0.5684  0.4192  0.3698 -0.0573  0.1470 ggbiplot(crime.pca,          labels = crime$st ,          circle = TRUE,          varname.size = 4,          varname.color = \"red\") crime.pca <- reflect(crime.pca) ggbiplot(crime.pca,          groups = crime$region,          labels = crime$st,          labels.size = 4,          var.factor = 1.4,          ellipse = TRUE, ellipse.level = 0.5, ellipse.alpha = 0.1,          circle = TRUE,          varname.size = 4,          varname.color = \"black\") +   labs(fill = \"Region\", color = \"Region\") +   theme(legend.direction = 'horizontal', legend.position = 'top')"},{"path":"http://friendly.github.io/ggbiplot/index.html","id":"wine-data","dir":"","previous_headings":"Examples","what":"Wine data","title":"A Grammar of Graphics Implementation of Biplots","text":"wine data contains results chemical analysis wines grown region Italy, derived three different cultivars. analysis determined quantities 13 chemical constituents found three types wines. grape varieties (cultivars), barolo, barbera, grignolino, given wine.class. can understand differences among wines biplot?  Hmm. screeplot shows two dimensions necessary account variance. Plot first two PCA dimensions, accounting 55% variance.  three cultivars arranged along first dimension, order barolo < grignolino < barbera. distinguished largely contrast (Phenols, Flav) vs. (NonFlavPhenols, AlcAsh). second dimension represented cluster variables Mg, Alcohol, Ash, Color, distinguishes grignolino two.","code":"library(ggbiplot) library(ggplot2) library(dplyr)  data(wine) wine.pca <- prcomp(wine, scale. = TRUE) ggscreeplot(wine.pca) ggbiplot(wine.pca,    obs.scale = 1, var.scale = 1,   groups = wine.class,    varname.size = 4,   ellipse = TRUE,    circle = TRUE) +   labs(fill = \"Cultivar\", color = \"Cultivar\") +   theme(legend.direction = 'horizontal', legend.position = 'top')"},{"path":"http://friendly.github.io/ggbiplot/index.html","id":"iris-data","dir":"","previous_headings":"Examples","what":"Iris data","title":"A Grammar of Graphics Implementation of Biplots","text":"classic iris data widely used examples multivariate analysis biplots, let’s use . Plot first two dimensions:  possible add annotations biplot making use fact ggplot() returns lot information \"gg\" object. particular, $data component contains scores principal components plotted points . add direct labels groups suppress legend. Now, just use geom_label draw labels groups.","code":"data(iris) iris.pca <- prcomp (~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width,                     data=iris,                     scale. = TRUE) summary(iris.pca) #> Importance of components: #>                         PC1   PC2    PC3     PC4 #> Standard deviation     1.71 0.956 0.3831 0.14393 #> Proportion of Variance 0.73 0.229 0.0367 0.00518 #> Cumulative Proportion  0.73 0.958 0.9948 1.00000 iris.gg <- ggbiplot(iris.pca, obs.scale = 1, var.scale = 1,          groups = iris$Species, point.size=2,          varname.size = 5,           varname.color = \"black\",          varname.adjust = 1.2,          ellipse = TRUE,           circle = TRUE) +   labs(fill = \"Species\", color = \"Species\") +   theme_minimal(base_size = 14) +   theme(legend.direction = 'horizontal', legend.position = 'top')  iris.gg # get means of coordinates by group group.labs <-   iris.gg$data |>   summarise(xvar = mean(xvar),             yvar = mean(yvar), .by = groups)  group.labs #>       groups   xvar   yvar #> 1     setosa -2.217 -0.288 #> 2 versicolor  0.495  0.548 #> 3  virginica  1.723 -0.260 iris.gg + geom_label(data = group.labs,                      aes(x = xvar, y=yvar, label=groups),                      size = 5) +   theme(legend.position = \"none\")"},{"path":"http://friendly.github.io/ggbiplot/reference/crime.html","id":null,"dir":"Reference","previous_headings":"","what":"U. S. Crimes — crime","title":"U. S. Crimes — crime","text":"dataset gives rates occurrence (per 100,000 people) various serious crimes 50 U. S. states,  originally United States Statistical Abstracts (1970). data analyzed John Hartigan (1975) book Clustering Algorithms  later reanalyzed Friendly (1991).","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/crime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U. S. Crimes — crime","text":"","code":"data(crime)"},{"path":"http://friendly.github.io/ggbiplot/reference/crime.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U. S. Crimes — crime","text":"data frame 50 observations following 10 variables. state state name, character vector murder numeric vector rape numeric vector robbery numeric vector assault numeric vector burglary numeric vector larceny numeric vector auto auto thefts, numeric vector st state abbreviation, character vector region region U.S., factor levels Northeast South North Central West","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/crime.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"U. S. Crimes — crime","text":"data originally United States Statistical Abstracts (1970). dataset also appears SAS/Stat Sample library, Getting Started Example PROC PRINCOMP,  https://support.sas.com/documentation/onlinedoc/stat/ex_code/131/princgs.html, current copy derived.","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/crime.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"U. S. Crimes — crime","text":"Friendly, M. (1991). SAS System Statistical Graphics. SAS Institute. Hartigan, J. . (1975). Clustering Algorithms. John Wiley Sons.","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/crime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"U. S. Crimes — crime","text":"","code":"data(crime) library(ggplot2) crime.pca <-    crime |>    dplyr::select(where(is.numeric)) |>   prcomp(scale. = TRUE)  ggbiplot(crime.pca,      labels = crime$st ,      circle = TRUE,      varname.size = 4,      varname.color = \"red\") +  theme_minimal(base_size = 14)"},{"path":"http://friendly.github.io/ggbiplot/reference/get_SVD.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the SVD components from a PCA-like object — get_SVD","title":"Extract the SVD components from a PCA-like object — get_SVD","text":"Biplots based Singular Value Decomposition, data matrix $$\\mathbf{X} / \\sqrt{n} = \\mathbf{U} \\mathbf{D} \\mathbf{V}^T$$ computed returned quite different forms various PCA-like methods. function provides common interface, returning components standard names.","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/get_SVD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the SVD components from a PCA-like object — get_SVD","text":"","code":"get_SVD(pcobj)"},{"path":"http://friendly.github.io/ggbiplot/reference/get_SVD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the SVD components from a PCA-like object — get_SVD","text":"pcobj object returned prcomp, princomp,  PCA, dudi.pca, lda","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/get_SVD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the SVD components from a PCA-like object — get_SVD","text":"list four elements  n sample size analysis based U Left singular vectors, giving observation scores D vector singular values, diagonal elements matrix \\(\\mathbf{D}\\), also square roots         eigenvalues \\(\\mathbf{X} \\mathbf{X}'\\) V Right singular vectors, giving variable loadings","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/get_SVD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the SVD components from a PCA-like object — get_SVD","text":"","code":"data(crime) crime.pca <-    crime |>    dplyr::select(where(is.numeric)) |>   prcomp(scale. = TRUE)  crime.svd <- get_SVD(crime.pca) names(crime.svd) #> [1] \"n\" \"U\" \"D\" \"V\" crime.svd$D #> [1] 2.0285363 1.1129788 0.8519487 0.5625229 0.5079119 0.4712106 0.3522159"},{"path":"http://friendly.github.io/ggbiplot/reference/ggbiplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Biplot for Principal Components using ggplot2 — ggbiplot","title":"Biplot for Principal Components using ggplot2 — ggbiplot","text":"biplot simultaneously displays information observations (points) variables (vectors) multidimensional dataset. 2D biplot typically based first two principal components dataset, giving rank 2 approximation  data. “bi” biplot refers fact two sets points (.e., rows columns data matrix) visualized scalar products, fact display usually two-dimensional. biplot method principal component analysis originally defined Gabriel (1971, 1981). Gower & Hand (1996) give complete treatment. Greenacre (2010) practical user-oriented guide biplots. Gower et al. (2011) date exposition biplot methodology. implementation handles results principal components analysis using  prcomp, princomp, PCA dudi.pca; also handles discriminant analysis using lda.","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/ggbiplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biplot for Principal Components using ggplot2 — ggbiplot","text":"","code":"ggbiplot(   pcobj,   choices = 1:2,   scale = 1,   pc.biplot = TRUE,   obs.scale = 1 - scale,   var.scale = scale,   var.factor = 1,   groups = NULL,   point.size = 1.5,   ellipse = FALSE,   ellipse.prob = 0.68,   ellipse.linewidth = 1.3,   ellipse.fill = TRUE,   ellipse.alpha = 0.25,   labels = NULL,   labels.size = 3,   alpha = 1,   var.axes = TRUE,   circle = FALSE,   circle.prob = 0.68,   varname.size = 3,   varname.adjust = 1.25,   varname.color = \"black\",   varname.abbrev = FALSE,   axis.title = \"PC\",   ... )"},{"path":"http://friendly.github.io/ggbiplot/reference/ggbiplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biplot for Principal Components using ggplot2 — ggbiplot","text":"pcobj object returned prcomp, princomp,  PCA, dudi.pca, lda choices components plot? integer vector length 2. scale Covariance biplot (scale = 1), form biplot (scale = 0).  scale = 1 (default), inner product  variables approximates covariance distance points  approximates Mahalanobis distance. pc.biplot Logical, compatibility biplot.princomp(). TRUE, use Gabriel (1971)  refers \"principal component biplot\", \\(\\alpha = 1\\) observations scaled  \\(sqrt(n)\\) variables scaled \\(sqrt(n)\\). inner products  variables approximate covariances distances observations approximate  Mahalanobis distance. obs.scale Scale factor apply observations var.scale Scale factor apply variables var.factor Factor applied variable vectors scaling. allows variable vectors reflected (var.factor = -1) expanded length (var.factor > 1) greater visibility. reflect provides simpler way reflect variables. groups Optional factor variable indicating groups observations belong .  provided points colored according groups allows data ellipses also drawn ellipse = TRUE. point.size Size observation points. ellipse Logical; draw normal data ellipse group? ellipse.prob Coverage size data ellipse Normal probability ellipse.linewidth Thickness line outlining ellipses ellipse.fill Logical; ellipses filled? ellipse.alpha Transparency value (0 - 1) filled ellipses labels Optional vector labels observations. Often, specified row.names() dataset. labels.size Size text used point labels alpha Alpha transparency value points (0 = transparent, 1 = opaque) var.axes logical; draw arrows variables? circle draw correlation circle? (applies prcomp called  scale = TRUE var.scale = 1) circle.prob Size correlation circle varname.size Size text variable names varname.adjust Adjustment factor placement variable names, >= 1 means farther arrow varname.color Color variable vectors names varname.abbrev logical; whether abbreviate variable names, using abbreviate. axis.title character; prefix used axis labels. Default: \"PC\". ... arguments passed ","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/ggbiplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biplot for Principal Components using ggplot2 — ggbiplot","text":"ggplot2 plot object class c(\"gg\", \"ggplot\")","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/ggbiplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biplot for Principal Components using ggplot2 — ggbiplot","text":"biplot constructed using singular value decomposition (SVD) obtain low-rank  approximation data matrix \\(\\mathbf{X}_{n \\times p}\\) (centered, optionally scaled unit variances) whose \\(n\\) rows observations  whose \\(p\\) columns variables. Using SVD, matrix \\(\\mathbf{X}\\), rank \\(r \\le p\\) can expressed exactly $$\\mathbf{X} = \\mathbf{U} \\mathbf{\\Lambda} \\mathbf{V}'                  = \\Sigma_i^r \\lambda_i \\mathbf{u}_i \\mathbf{v}_i' \\; ,$$ \\(\\mathbf{U}\\) \\(n \\times r\\) orthonormal matrix observation scores; also eigenvectors          \\(\\mathbf{X} \\mathbf{X}'\\), \\(\\mathbf{\\Lambda}\\) \\(r \\times r\\) diagonal matrix singular values,           \\(\\lambda_1 \\ge \\lambda_2 \\ge \\cdots \\lambda_r\\) \\(\\mathbf{V}\\) \\(r \\times p\\) orthonormal matrix variable weights also eigenvectors          \\(\\mathbf{X}' \\mathbf{X}\\). , rank 2 (3) PCA approximation \\(\\widehat{\\mathbf{X}}\\) data matrix used biplot can obtained first 2 (3) singular values \\(\\lambda_i\\) corresponding \\(\\mathbf{u}_i, \\mathbf{v}_i\\) $$\\mathbf{X} \\approx \\widehat{\\mathbf{X}} = \\lambda_1 \\mathbf{u}_1 \\mathbf{v}_1' + \\lambda_2 \\mathbf{u}_2 \\mathbf{v}_2' \\; .$$ variance \\(\\mathbf{X}\\) accounted term \\(\\lambda_i^2\\). biplot obtained overlaying two scatterplots share common set axes -set scalar  product interpretation. Typically, observations (rows \\(\\mathbf{X}\\)) represented points variables (columns \\(\\mathbf{X}\\)) represented vectors origin. scale factor, \\(\\alpha\\) allows variances components apportioned row points column vectors, different interpretations, representing approximation \\(\\widehat{\\mathbf{X}}\\) product two matrices, $$\\widehat{\\mathbf{X}} = (\\mathbf{U} \\mathbf{\\Lambda}^\\alpha) (\\mathbf{\\Lambda}^{1-\\alpha} \\mathbf{V}')$$ choice \\(\\alpha = 1\\), assigning singular values totally left factor,  gives distance interpretation row display  \\(\\alpha = 0\\) gives distance interpretation column display. \\(\\alpha = 1/2\\) gives symmetrically scaled biplot. singular values assigned totally left right factor, resultant  coordinates called principal coordinates sum squared coordinates dimension equal corresponding singular value. matrix, part singular  values assigned, contains -called standard coordinates sum squared values equal 1.0.","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/ggbiplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Biplot for Principal Components using ggplot2 — ggbiplot","text":"Gabriel, K. R. (1971). biplot graphical display matrices application principal component analysis.    Biometrika, 58, 453–467. doi:10.2307/2334381 . Gabriel, K. R. (1981). Biplot display multivariate matrices inspection data diagnosis.    V. Barnett (Ed.), Interpreting Multivariate Data. London: Wiley. Greenacre, M. (2010). Biplots Practice. BBVA Foundation, Bilbao, Spain.    Available free https://www.fbbva.es/microsite/multivariate-statistics/. J.C. Gower D. J. Hand (1996). Biplots. Chapman & Hall. Gower, J. C., Lubbe, S. G., & Roux, N. J. L. (2011). Understanding Biplots. Wiley.","code":""},{"path":[]},{"path":"http://friendly.github.io/ggbiplot/reference/ggbiplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Biplot for Principal Components using ggplot2 — ggbiplot","text":"Vincent Q. Vu.","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/ggbiplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biplot for Principal Components using ggplot2 — ggbiplot","text":"","code":"data(wine) library(ggplot2) wine.pca <- prcomp(wine, scale. = TRUE) ggbiplot(wine.pca,           obs.scale = 1, var.scale = 1,           varname.size = 4,          groups = wine.class,           ellipse = TRUE, circle = TRUE)   data(iris) iris.pca <- prcomp (~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width,                     data=iris,                     scale. = TRUE) ggbiplot(iris.pca, obs.scale = 1, var.scale = 1,          groups = iris$Species, point.size=2,          varname.size = 5,           varname.color = \"black\",          varname.adjust = 1.2,          ellipse = TRUE,           circle = TRUE) +   labs(fill = \"Species\", color = \"Species\") +   theme_minimal(base_size = 14) +   theme(legend.direction = 'horizontal', legend.position = 'top')"},{"path":"http://friendly.github.io/ggbiplot/reference/ggscreeplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Screeplot for Principal Components — ggscreeplot","title":"Screeplot for Principal Components — ggscreeplot","text":"Produces scree plots (Cattell, 1966) variance proportions explained dimension dimension number  various dimension reduction techniques","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/ggscreeplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screeplot for Principal Components — ggscreeplot","text":"","code":"ggscreeplot(   pcobj,   type = c(\"pev\", \"cev\"),   size = 4,   shape = 1,   color = \"black\",   linetype = 1,   linewidth = 1 )"},{"path":"http://friendly.github.io/ggbiplot/reference/ggscreeplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screeplot for Principal Components — ggscreeplot","text":"pcobj object returned prcomp, princomp,  PCA, dudi.pca, lda type type scree plot. 'pev' corresponds proportion explained variance, .e. eigenvalues divided trace.  'cev' corresponds cumulative proportion explained variance, .e. partial sum first k eigenvalues divided trace. size point size shape shape points color color points line linetype type line linewidth width line","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/ggscreeplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screeplot for Principal Components — ggscreeplot","text":"ggplot2 object","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/ggscreeplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Screeplot for Principal Components — ggscreeplot","text":"Cattell, R. B. (1966). Scree Test Number Factors. Multivariate Behavioral Research, 1, 245–276.","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/ggscreeplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Screeplot for Principal Components — ggscreeplot","text":"","code":"data(wine)   wine.pca <- prcomp(wine, scale. = TRUE)   ggscreeplot(wine.pca)"},{"path":"http://friendly.github.io/ggbiplot/reference/reflect.html","id":null,"dir":"Reference","previous_headings":"","what":"Reflect Columns in a Principal Component-like Object — reflect","title":"Reflect Columns in a Principal Component-like Object — reflect","text":"Principle component-like objects variable loadings (eigenvectors covariance/correlation matrix) whose signs arbitrary, sense given column can  reflected (multiplied -1) without changing fit.","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/reflect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reflect Columns in a Principal Component-like Object — reflect","text":"","code":"reflect(pcobj, columns = 1:2)"},{"path":"http://friendly.github.io/ggbiplot/reference/reflect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reflect Columns in a Principal Component-like Object — reflect","text":"pcobj object returned prcomp, princomp,  PCA, lda columns vector indices columns reflect","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/reflect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reflect Columns in a Principal Component-like Object — reflect","text":"pca-like object specified columns             variable loadings observation scores multiplied            -1.","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/reflect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reflect Columns in a Principal Component-like Object — reflect","text":"function allows one reflect columns variable loadings (corresponding observation scores). Coordinates quantitative supplementary variables also reflected present. often useful interpreting biplot, example component (often first) negative signs.","code":""},{"path":[]},{"path":"http://friendly.github.io/ggbiplot/reference/reflect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reflect Columns in a Principal Component-like Object — reflect","text":"Michael Friendly","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/reflect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reflect Columns in a Principal Component-like Object — reflect","text":"","code":"data(crime) crime.pca <-    crime |>    dplyr::select(where(is.numeric)) |>   prcomp(scale. = TRUE)     biplot(crime.pca)     crime.pca <- reflect(crime.pca)  # reflect columns 1:2  biplot(crime.pca)"},{"path":"http://friendly.github.io/ggbiplot/reference/wine.html","id":null,"dir":"Reference","previous_headings":"","what":"Wine dataset — wine","title":"Wine dataset — wine","text":"Results chemical analysis wines grown region Italy,    derived three different cultivars. analysis determined     quantities 13 chemical constituents found three types wines. grape varieties (cultivars), 'barolo', 'barbera', 'grignolino', indicated wine.class.","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/wine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wine dataset — wine","text":"","code":"data(wine)"},{"path":"http://friendly.github.io/ggbiplot/reference/wine.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wine dataset — wine","text":"wine data frame consisting 178 observations (rows) 13 columns vector wine.class factors indicating cultivars. variables : Alcohol numeric vector MalicAcid Malic acid, numeric vector Ash Ash, numeric vector AlcAsh Alcalinity ash, numeric vector Mg Magnesium, numeric vector Phenols total phenols, numeric vector Flav Flavanoids, numeric vector NonFlavPhenols Nonflavanoid phenols, numeric vector Proa Proanthocyanins, numeric vector Color Color intensity, numeric vector Hue numeric vector OD D280/OD315 diluted wines, numeric vector Proline numeric vector","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/wine.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Wine dataset — wine","text":"UCI Machine Learning Repository (http://archive.ics.uci.edu/ml/datasets/Wine)","code":""},{"path":"http://friendly.github.io/ggbiplot/reference/wine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wine dataset — wine","text":"","code":"data(wine) table(wine.class) #> wine.class #>     barolo grignolino    barbera  #>         59         71         48   wine.pca <- prcomp(wine, scale. = TRUE) ggscreeplot(wine.pca)                                                 ggbiplot(wine.pca,           obs.scale = 1, var.scale = 1,           groups = wine.class, ellipse = TRUE, circle = TRUE)"},{"path":"http://friendly.github.io/ggbiplot/news/index.html","id":"version-062","dir":"Changelog","previous_headings":"","what":"Version 0.6.2","title":"Version 0.6.2","text":"corrected small bugs ggbiplot() andggscreeplot()` reflect() now also reflects supplementary variables FactoMineR::PCA() added support ade4::dudi.pca() ggbiplot() gains axis.title argument ggscreeplot() gains color, shape, linetype linewidth arguments Added get_SVD() intended simplify interface various PCA functions.","code":""},{"path":"http://friendly.github.io/ggbiplot/news/index.html","id":"version-061","dir":"Changelog","previous_headings":"","what":"Version 0.6.1","title":"Version 0.6.1","text":"CRAN release: 2023-12-17 Revised documentation ggscreeplot() data(crime) used README giving complete example. Fixed links reported 301s Published pkgdown site","code":""},{"path":"http://friendly.github.io/ggbiplot/news/index.html","id":"version-060","dir":"Changelog","previous_headings":"","what":"Version 0.6.0","title":"Version 0.6.0","text":"Use geom_polygon() rather geom_path() ellipses allow filled. Added var.factor argument expand reflect variable vectors Moved points/labels code earlier ellipses variable vectors obscured Replaced internal calculation ellipses stat_ellipse() Now allow ellipses filled (geom_polygon()) unfilled (geom_path()) Added hex logo Added iris example README Removed Imports: dplyr, purrr longer needed","code":""},{"path":"http://friendly.github.io/ggbiplot/news/index.html","id":"version-056","dir":"Changelog","previous_headings":"","what":"Version 0.56","title":"Version 0.56","text":"Fixed many documentation errors warnings Use roxygen2 documentation added varname.color replace fixed muted(\"red\") tweaked arrow style increased default thickness variable vectors add point.size argument","code":""}]
